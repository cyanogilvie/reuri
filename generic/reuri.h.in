#include <tcl.h>
#include "idx.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef BUILD_reuri
#undef TCL_STORAGE_CLASS
#define TCL_STORAGE_CLASS DLLEXPORT
#endif

// Must be kept in sync with reuri_part_str
enum reuri_part {
	REURI_SCHEME,
	REURI_USERINFO,
	REURI_HOST,
	REURI_HOSTTYPE,
	REURI_PORT,
	REURI_PATH,
	REURI_QUERY,
	REURI_FRAGMENT
};

// Must be kept in sync with reuri_encode_mode_str
enum reuri_encode_mode {
	REURI_ENCODE_QUERY,
	REURI_ENCODE_PATH,
	REURI_ENCODE_PATH2,		// More permissive, for segments other than the first relative segment (which can't include ':' to avoid confusion with the scheme)
	REURI_ENCODE_HOST,
	REURI_ENCODE_USERINFO,
	REURI_ENCODE_FRAGMENT,
	REURI_ENCODE_AWSSIG
};


/* Stubs exported API */

#ifdef USE_REURI_STUBS
extern const char* ReuriInitializeStubs(Tcl_Interp* interp);
#define Reuri_InitStubs(interp)	ReuriInitializeStubs((interp))
#else
#define Reuri_InitStubs(interp)	Tcl_PkgRequire((interp), "@PACKAGE_NAME@", "@PACKAGE_VERSION@", 0)
#endif

#include "reuriDecls.h"

EXTERN int Reuri_Init _ANSI_ARGS_((Tcl_Interp * interp));

#ifdef __cplusplus
}
#endif
